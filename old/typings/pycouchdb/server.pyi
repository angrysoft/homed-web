"""
This type stub file was generated by pyright.
"""

from typing import Any, Dict, List

class Server:
    """The CouchDB server interface provides the basic interface to a CouchDB server
    for obtaining CouchDB information and getting and setting configuration information.
    """

    def __init__(self, url: str = ...) -> None:
        """Server constructor
        Args:
            url (str): url to database server

        """
        ...
    def get_server_info(self) -> Dict[str, Any]: ...
    def active_tasks(self) -> List[Dict[str, Any]]:
        """List of running tasks, including the task type, name, status and process ID.
        The result is a JSON array of the currently running tasks,
        with each task being described with a single object.
        Depending on operation type set of response object fields might be different.

        Returns:
            List[Dict[str,Any]]:    changes_done (number) – Processed changes
                                    database (string) – Source database
                                    pid (string) – Process ID
                                    progress (number) – Current percentage progress
                                    started_on (number) – Task start time as unix timestamp
                                    status (string) – Task status message
                                    task (string) – Task name
                                    total_changes (number) – Total changes to process
                                    type (string) – Operation Type
                                    updated_on (number) – Unix timestamp of last operation update
        """
        ...
    def list_database_names(self) -> List[str]:
        """Returns a list of all the databases in the CouchDB instance."""
        ...
    def dbs_info(self, *keys: str) -> List[Any]:
        """
        Returns information of a list of the specified databases in the CouchDB instance

        Args:
            keys (list): Array of database names to be requested

        Returns:
            list: list of datebase info

        Raises:
            ServerError
        """
        ...
    def get_cluster_setup(self) -> Dict[str, Any]: ...
    def set_cluster_setup(self) -> None: ...
    def db_updates(
        self,
        feed: str = ...,
        timeout: int = ...,
        heartbeat: int = ...,
        since: str = ...,
    ): ...
    def membership(self):
        """Displays the nodes that are part of the cluster as cluster_nodes.
        The field all_nodes displays all nodes this node knows about,
        including the ones that are part of the cluster.

        Returns:
            dict:
        """
        ...
    def set_replicate(self) -> Dict[str, Any]: ...
    def is_up(self):
        """Confirms that the server is up, running, and ready to respond to requests."""
        ...
